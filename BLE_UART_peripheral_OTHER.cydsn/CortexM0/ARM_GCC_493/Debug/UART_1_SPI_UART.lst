ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_1_SpiUartReadRxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_1_SpiUartReadRxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_1_SpiUartReadRxData, %function
  23              	UART_1_SpiUartReadRxData:
  24              	.LFB2:
  25              		.file 1 "Generated_Source\\PSoC4\\UART_1_SPI_UART.c"
   1:Generated_Source\PSoC4/UART_1_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * \file UART_1_SPI_UART.c
   3:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
   5:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
   9:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
  11:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  19:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #include "UART_1_PVT.h"
  20:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #include "UART_1_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  22:Generated_Source\PSoC4/UART_1_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *        SPI/UART Private Vars
  24:Generated_Source\PSoC4/UART_1_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  26:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #if(UART_1_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     volatile uint32 UART_1_rxBufferHead;
  29:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     volatile uint32 UART_1_rxBufferTail;
  31:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \addtogroup group_globals
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 2


  33:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     volatile uint8  UART_1_rxBufferOverflow;
  39:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #endif /* (UART_1_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  42:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #if(UART_1_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     volatile uint32 UART_1_txBufferHead;
  45:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     volatile uint32 UART_1_txBufferTail;
  47:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #endif /* (UART_1_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  49:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #if(UART_1_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     volatile uint8 UART_1_rxBufferInternal[UART_1_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #endif /* (UART_1_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  54:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #if(UART_1_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     volatile uint8 UART_1_txBufferInternal[UART_1_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #endif /* (UART_1_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  58:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  59:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #if(UART_1_RX_DIRECTION)
  60:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * Function Name: UART_1_SpiUartReadRxData
  62:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software receive buffer.
  81:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     uint32 UART_1_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     {
  26              		.loc 1 84 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 3


  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 rxData = 0u;
  36              		.loc 1 85 0
  37 0006 0023     		mov	r3, #0
  38 0008 7B60     		str	r3, [r7, #4]
  86:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  87:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #if (UART_1_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #endif /* (UART_1_INTERNAL_RX_SW_BUFFER_CONST) */
  90:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  91:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #if (UART_1_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             if (UART_1_rxBufferHead != UART_1_rxBufferTail)
  94:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
  97:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 locTail = (UART_1_rxBufferTail + 1u);
  99:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 100:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 if (UART_1_INTERNAL_RX_BUFFER_SIZE == locTail)
 101:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     locTail = 0u;
 103:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 105:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 rxData = UART_1_GetWordFromRxBuffer(locTail);
 107:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 108:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 UART_1_rxBufferTail = locTail;
 110:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 111:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 #if (UART_1_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     if (0u == (UART_1_INTR_RX_MASK_REG & UART_1_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                         UART_1_INTR_RX_MASK_REG |= UART_1_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 124:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             rxData = UART_1_RX_FIFO_RD_REG;
  39              		.loc 1 129 0
  40 000a 044B     		ldr	r3, .L3
  41 000c 1B68     		ldr	r3, [r3]
  42 000e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 4


 130:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 133:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         return (rxData);
  43              		.loc 1 133 0
  44 0010 7B68     		ldr	r3, [r7, #4]
 134:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     }
  45              		.loc 1 134 0
  46 0012 181C     		mov	r0, r3
  47 0014 BD46     		mov	sp, r7
  48 0016 02B0     		add	sp, sp, #8
  49              		@ sp needed
  50 0018 80BD     		pop	{r7, pc}
  51              	.L4:
  52 001a C046     		.align	2
  53              	.L3:
  54 001c 40032540 		.word	1076167488
  55              		.cfi_endproc
  56              	.LFE2:
  57              		.size	UART_1_SpiUartReadRxData, .-UART_1_SpiUartReadRxData
  58              		.section	.text.UART_1_SpiUartGetRxBufferSize,"ax",%progbits
  59              		.align	2
  60              		.global	UART_1_SpiUartGetRxBufferSize
  61              		.code	16
  62              		.thumb_func
  63              		.type	UART_1_SpiUartGetRxBufferSize, %function
  64              	UART_1_SpiUartGetRxBufferSize:
  65              	.LFB3:
 135:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 136:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 137:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * Function Name: UART_1_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 147:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     uint32 UART_1_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     {
  66              		.loc 1 158 0
  67              		.cfi_startproc
  68 0000 80B5     		push	{r7, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 5


  71              		.cfi_offset 14, -4
  72 0002 82B0     		sub	sp, sp, #8
  73              		.cfi_def_cfa_offset 16
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
 159:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #if (UART_1_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #endif /* (UART_1_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 164:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #if (UART_1_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             locHead = UART_1_rxBufferHead;
 167:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 168:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             if(locHead >= UART_1_rxBufferTail)
 169:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 size = (locHead - UART_1_rxBufferTail);
 171:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 size = (locHead + (UART_1_INTERNAL_RX_BUFFER_SIZE - UART_1_rxBufferTail));
 175:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             size = UART_1_GET_RX_FIFO_ENTRIES;
  76              		.loc 1 179 0
  77 0006 054B     		ldr	r3, .L7
  78 0008 1B68     		ldr	r3, [r3]
  79 000a 1F22     		mov	r2, #31
  80 000c 1340     		and	r3, r2
  81 000e 7B60     		str	r3, [r7, #4]
 180:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 183:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         return (size);
  82              		.loc 1 183 0
  83 0010 7B68     		ldr	r3, [r7, #4]
 184:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     }
  84              		.loc 1 184 0
  85 0012 181C     		mov	r0, r3
  86 0014 BD46     		mov	sp, r7
  87 0016 02B0     		add	sp, sp, #8
  88              		@ sp needed
  89 0018 80BD     		pop	{r7, pc}
  90              	.L8:
  91 001a C046     		.align	2
  92              	.L7:
  93 001c 08032540 		.word	1076167432
  94              		.cfi_endproc
  95              	.LFE3:
  96              		.size	UART_1_SpiUartGetRxBufferSize, .-UART_1_SpiUartGetRxBufferSize
  97              		.section	.text.UART_1_SpiUartClearRxBuffer,"ax",%progbits
  98              		.align	2
  99              		.global	UART_1_SpiUartClearRxBuffer
 100              		.code	16
 101              		.thumb_func
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 6


 102              		.type	UART_1_SpiUartClearRxBuffer, %function
 103              	UART_1_SpiUartClearRxBuffer:
 104              	.LFB4:
 185:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 186:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 187:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * Function Name: UART_1_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     void UART_1_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     {
 105              		.loc 1 201 0
 106              		.cfi_startproc
 107 0000 80B5     		push	{r7, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 202:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #if (UART_1_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 204:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_DisableInt();
 206:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 207:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_rxBufferHead = UART_1_rxBufferTail;
 209:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_rxBufferOverflow = 0u;
 210:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 211:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_CLEAR_RX_FIFO;
 212:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ALL);
 213:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 214:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             #if (UART_1_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 UART_1_INTR_RX_MASK_REG |= UART_1_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             
 223:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_EnableInt();
 225:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_CLEAR_RX_FIFO;
 113              		.loc 1 228 0
 114 0004 074B     		ldr	r3, .L10
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 7


 115 0006 074A     		ldr	r2, .L10
 116 0008 1268     		ldr	r2, [r2]
 117 000a 8021     		mov	r1, #128
 118 000c 4902     		lsl	r1, r1, #9
 119 000e 0A43     		orr	r2, r1
 120 0010 1A60     		str	r2, [r3]
 121 0012 044B     		ldr	r3, .L10
 122 0014 034A     		ldr	r2, .L10
 123 0016 1268     		ldr	r2, [r2]
 124 0018 0349     		ldr	r1, .L10+4
 125 001a 0A40     		and	r2, r1
 126 001c 1A60     		str	r2, [r3]
 229:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     }
 127              		.loc 1 231 0
 128 001e BD46     		mov	sp, r7
 129              		@ sp needed
 130 0020 80BD     		pop	{r7, pc}
 131              	.L11:
 132 0022 C046     		.align	2
 133              	.L10:
 134 0024 04032540 		.word	1076167428
 135 0028 FFFFFEFF 		.word	-65537
 136              		.cfi_endproc
 137              	.LFE4:
 138              		.size	UART_1_SpiUartClearRxBuffer, .-UART_1_SpiUartClearRxBuffer
 139              		.section	.text.UART_1_SpiUartDisableIntRx,"ax",%progbits
 140              		.align	2
 141              		.global	UART_1_SpiUartDisableIntRx
 142              		.code	16
 143              		.thumb_func
 144              		.type	UART_1_SpiUartDisableIntRx, %function
 145              	UART_1_SpiUartDisableIntRx:
 146              	.LFB5:
 232:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 233:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #endif /* (UART_1_RX_DIRECTION) */
 234:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 235:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 236:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #if(UART_1_TX_DIRECTION)
 237:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * Function Name: UART_1_SpiUartWriteTxData
 239:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferTail - start index to get data from the software
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 8


 254:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     void UART_1_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     {
 259:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #if (UART_1_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #endif /* (UART_1_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 263:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #if (UART_1_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             if ((UART_1_txBufferHead == UART_1_txBufferTail) &&
 267:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 (UART_1_SPI_UART_FIFO_SIZE != UART_1_GET_TX_FIFO_ENTRIES))
 268:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 UART_1_TX_FIFO_WR_REG = txData;
 271:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 locHead = (UART_1_txBufferHead + 1u);
 277:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 278:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 if (UART_1_TX_BUFFER_SIZE == locHead)
 280:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     locHead = 0u;
 282:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 284:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 while (locHead == UART_1_txBufferTail)
 286:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 289:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 291:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 UART_1_ClearTxInterruptSource(UART_1_INTR_TX_NOT_FULL);
 293:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 294:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 UART_1_PutWordInTxBuffer(locHead, txData);
 295:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 296:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 UART_1_txBufferHead = locHead;
 297:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 298:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 if (0u == (UART_1_INTR_TX_MASK_REG & UART_1_INTR_TX_NOT_FULL))
 300:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                     UART_1_INTR_TX_MASK_REG |= (uint32) UART_1_INTR_TX_NOT_FULL;
 303:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             while (UART_1_SPI_UART_FIFO_SIZE == UART_1_GET_TX_FIFO_ENTRIES)
 310:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 9


 311:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 313:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_TX_FIFO_WR_REG = txData;
 314:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     }
 317:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 318:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 319:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * Function Name: UART_1_SpiUartPutArray
 321:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     void UART_1_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     {
 342:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 344:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         for (i=0u; i < count; i++)
 345:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_SpiUartWriteTxData((uint32) wrBuf[i]);
 347:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     }
 349:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 350:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 351:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * Function Name: UART_1_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferHead - the start index to put data into the 
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 10


 368:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     uint32 UART_1_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     {
 375:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #if (UART_1_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     #endif /* (UART_1_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 380:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #if (UART_1_CHECK_TX_SW_BUFFER)
 381:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             locTail = UART_1_txBufferTail;
 384:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 385:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             if (UART_1_txBufferHead >= locTail)
 386:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 size = (UART_1_txBufferHead - locTail);
 388:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             else
 390:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/UART_1_SPI_UART.c ****                 size = (UART_1_txBufferHead + (UART_1_TX_BUFFER_SIZE - locTail));
 392:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             size = UART_1_GET_TX_FIFO_ENTRIES;
 397:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 400:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         return (size);
 401:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     }
 402:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 403:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 404:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * Function Name: UART_1_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  UART_1_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     void UART_1_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     {
 419:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #if (UART_1_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_DisableInt();
 423:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 424:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Flush TX software buffer */
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 11


 425:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_txBufferHead = UART_1_txBufferTail;
 426:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 427:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_INTR_TX_MASK_REG &= (uint32) ~UART_1_INTR_TX_NOT_FULL;
 428:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_CLEAR_TX_FIFO;
 429:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_ClearTxInterruptSource(UART_1_INTR_TX_ALL);
 430:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 431:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_EnableInt();
 433:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/UART_1_SPI_UART.c ****             UART_1_CLEAR_TX_FIFO;
 437:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/UART_1_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     }
 440:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 441:Generated_Source\PSoC4/UART_1_SPI_UART.c **** #endif /* (UART_1_TX_DIRECTION) */
 442:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 443:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 444:Generated_Source\PSoC4/UART_1_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * Function Name: UART_1_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/UART_1_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
 448:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
 450:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
 453:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/UART_1_SPI_UART.c **** uint32 UART_1_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/UART_1_SPI_UART.c **** {
 147              		.loc 1 455 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 456:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 458:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     intSource = UART_1_GetRxInterruptMode();
 157              		.loc 1 458 0
 158 0006 054B     		ldr	r3, .L14
 159 0008 1B68     		ldr	r3, [r3]
 160 000a 7B60     		str	r3, [r7, #4]
 459:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 460:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     UART_1_SetRxInterruptMode(UART_1_NO_INTR_SOURCES);
 161              		.loc 1 460 0
 162 000c 034B     		ldr	r3, .L14
 163 000e 0022     		mov	r2, #0
 164 0010 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 462:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     return (intSource);
 165              		.loc 1 462 0
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 12


 166 0012 7B68     		ldr	r3, [r7, #4]
 463:Generated_Source\PSoC4/UART_1_SPI_UART.c **** }
 167              		.loc 1 463 0
 168 0014 181C     		mov	r0, r3
 169 0016 BD46     		mov	sp, r7
 170 0018 02B0     		add	sp, sp, #8
 171              		@ sp needed
 172 001a 80BD     		pop	{r7, pc}
 173              	.L15:
 174              		.align	2
 175              	.L14:
 176 001c C80F2540 		.word	1076170696
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	UART_1_SpiUartDisableIntRx, .-UART_1_SpiUartDisableIntRx
 180              		.section	.text.UART_1_SpiUartDisableIntTx,"ax",%progbits
 181              		.align	2
 182              		.global	UART_1_SpiUartDisableIntTx
 183              		.code	16
 184              		.thumb_func
 185              		.type	UART_1_SpiUartDisableIntTx, %function
 186              	UART_1_SpiUartDisableIntTx:
 187              	.LFB6:
 464:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 465:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 466:Generated_Source\PSoC4/UART_1_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/UART_1_SPI_UART.c **** * Function Name: UART_1_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/UART_1_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
 470:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
 472:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *
 475:Generated_Source\PSoC4/UART_1_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/UART_1_SPI_UART.c **** uint32 UART_1_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/UART_1_SPI_UART.c **** {
 188              		.loc 1 477 0
 189              		.cfi_startproc
 190 0000 80B5     		push	{r7, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 7, -8
 193              		.cfi_offset 14, -4
 194 0002 82B0     		sub	sp, sp, #8
 195              		.cfi_def_cfa_offset 16
 196 0004 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 478:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 480:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     intSourceMask = UART_1_GetTxInterruptMode();
 198              		.loc 1 480 0
 199 0006 054B     		ldr	r3, .L18
 200 0008 1B68     		ldr	r3, [r3]
 201 000a 7B60     		str	r3, [r7, #4]
 481:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 482:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     UART_1_SetTxInterruptMode(UART_1_NO_INTR_SOURCES);
 202              		.loc 1 482 0
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 13


 203 000c 034B     		ldr	r3, .L18
 204 000e 0022     		mov	r2, #0
 205 0010 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/UART_1_SPI_UART.c **** 
 484:Generated_Source\PSoC4/UART_1_SPI_UART.c ****     return (intSourceMask);
 206              		.loc 1 484 0
 207 0012 7B68     		ldr	r3, [r7, #4]
 485:Generated_Source\PSoC4/UART_1_SPI_UART.c **** }
 208              		.loc 1 485 0
 209 0014 181C     		mov	r0, r3
 210 0016 BD46     		mov	sp, r7
 211 0018 02B0     		add	sp, sp, #8
 212              		@ sp needed
 213 001a 80BD     		pop	{r7, pc}
 214              	.L19:
 215              		.align	2
 216              	.L18:
 217 001c 880F2540 		.word	1076170632
 218              		.cfi_endproc
 219              	.LFE6:
 220              		.size	UART_1_SpiUartDisableIntTx, .-UART_1_SpiUartDisableIntTx
 221              		.text
 222              	.Letext0:
 223              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 224              		.section	.debug_info,"",%progbits
 225              	.Ldebug_info0:
 226 0000 52010000 		.4byte	0x152
 227 0004 0400     		.2byte	0x4
 228 0006 00000000 		.4byte	.Ldebug_abbrev0
 229 000a 04       		.byte	0x4
 230 000b 01       		.uleb128 0x1
 231 000c 12020000 		.4byte	.LASF22
 232 0010 01       		.byte	0x1
 233 0011 91010000 		.4byte	.LASF23
 234 0015 E8000000 		.4byte	.LASF24
 235 0019 00000000 		.4byte	.Ldebug_ranges0+0
 236 001d 00000000 		.4byte	0
 237 0021 00000000 		.4byte	.Ldebug_line0
 238 0025 02       		.uleb128 0x2
 239 0026 01       		.byte	0x1
 240 0027 06       		.byte	0x6
 241 0028 CD010000 		.4byte	.LASF0
 242 002c 02       		.uleb128 0x2
 243 002d 01       		.byte	0x1
 244 002e 08       		.byte	0x8
 245 002f AC000000 		.4byte	.LASF1
 246 0033 02       		.uleb128 0x2
 247 0034 02       		.byte	0x2
 248 0035 05       		.byte	0x5
 249 0036 08020000 		.4byte	.LASF2
 250 003a 02       		.uleb128 0x2
 251 003b 02       		.byte	0x2
 252 003c 07       		.byte	0x7
 253 003d BA010000 		.4byte	.LASF3
 254 0041 02       		.uleb128 0x2
 255 0042 04       		.byte	0x4
 256 0043 05       		.byte	0x5
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 14


 257 0044 D8000000 		.4byte	.LASF4
 258 0048 02       		.uleb128 0x2
 259 0049 04       		.byte	0x4
 260 004a 07       		.byte	0x7
 261 004b 76000000 		.4byte	.LASF5
 262 004f 02       		.uleb128 0x2
 263 0050 08       		.byte	0x8
 264 0051 05       		.byte	0x5
 265 0052 00000000 		.4byte	.LASF6
 266 0056 02       		.uleb128 0x2
 267 0057 08       		.byte	0x8
 268 0058 07       		.byte	0x7
 269 0059 88000000 		.4byte	.LASF7
 270 005d 03       		.uleb128 0x3
 271 005e 04       		.byte	0x4
 272 005f 05       		.byte	0x5
 273 0060 696E7400 		.ascii	"int\000"
 274 0064 02       		.uleb128 0x2
 275 0065 04       		.byte	0x4
 276 0066 07       		.byte	0x7
 277 0067 29000000 		.4byte	.LASF8
 278 006b 04       		.uleb128 0x4
 279 006c 36000000 		.4byte	.LASF12
 280 0070 02       		.byte	0x2
 281 0071 BB01     		.2byte	0x1bb
 282 0073 48000000 		.4byte	0x48
 283 0077 02       		.uleb128 0x2
 284 0078 04       		.byte	0x4
 285 0079 04       		.byte	0x4
 286 007a 9F000000 		.4byte	.LASF9
 287 007e 02       		.uleb128 0x2
 288 007f 08       		.byte	0x8
 289 0080 04       		.byte	0x4
 290 0081 E1000000 		.4byte	.LASF10
 291 0085 02       		.uleb128 0x2
 292 0086 01       		.byte	0x1
 293 0087 08       		.byte	0x8
 294 0088 D3000000 		.4byte	.LASF11
 295 008c 04       		.uleb128 0x4
 296 008d 8B010000 		.4byte	.LASF13
 297 0091 02       		.byte	0x2
 298 0092 6502     		.2byte	0x265
 299 0094 98000000 		.4byte	0x98
 300 0098 05       		.uleb128 0x5
 301 0099 6B000000 		.4byte	0x6b
 302 009d 02       		.uleb128 0x2
 303 009e 04       		.byte	0x4
 304 009f 07       		.byte	0x7
 305 00a0 A0020000 		.4byte	.LASF14
 306 00a4 06       		.uleb128 0x6
 307 00a5 BA000000 		.4byte	.LASF15
 308 00a9 01       		.byte	0x1
 309 00aa 53       		.byte	0x53
 310 00ab 6B000000 		.4byte	0x6b
 311 00af 00000000 		.4byte	.LFB2
 312 00b3 20000000 		.4byte	.LFE2-.LFB2
 313 00b7 01       		.uleb128 0x1
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 15


 314 00b8 9C       		.byte	0x9c
 315 00b9 CC000000 		.4byte	0xcc
 316 00bd 07       		.uleb128 0x7
 317 00be A5000000 		.4byte	.LASF17
 318 00c2 01       		.byte	0x1
 319 00c3 55       		.byte	0x55
 320 00c4 6B000000 		.4byte	0x6b
 321 00c8 02       		.uleb128 0x2
 322 00c9 91       		.byte	0x91
 323 00ca 74       		.sleb128 -12
 324 00cb 00       		.byte	0
 325 00cc 06       		.uleb128 0x6
 326 00cd 3D000000 		.4byte	.LASF16
 327 00d1 01       		.byte	0x1
 328 00d2 9D       		.byte	0x9d
 329 00d3 6B000000 		.4byte	0x6b
 330 00d7 00000000 		.4byte	.LFB3
 331 00db 20000000 		.4byte	.LFE3-.LFB3
 332 00df 01       		.uleb128 0x1
 333 00e0 9C       		.byte	0x9c
 334 00e1 F4000000 		.4byte	0xf4
 335 00e5 07       		.uleb128 0x7
 336 00e6 D9010000 		.4byte	.LASF18
 337 00ea 01       		.byte	0x1
 338 00eb 9F       		.byte	0x9f
 339 00ec 6B000000 		.4byte	0x6b
 340 00f0 02       		.uleb128 0x2
 341 00f1 91       		.byte	0x91
 342 00f2 74       		.sleb128 -12
 343 00f3 00       		.byte	0
 344 00f4 08       		.uleb128 0x8
 345 00f5 EC010000 		.4byte	.LASF25
 346 00f9 01       		.byte	0x1
 347 00fa C8       		.byte	0xc8
 348 00fb 00000000 		.4byte	.LFB4
 349 00ff 2C000000 		.4byte	.LFE4-.LFB4
 350 0103 01       		.uleb128 0x1
 351 0104 9C       		.byte	0x9c
 352 0105 09       		.uleb128 0x9
 353 0106 5B000000 		.4byte	.LASF19
 354 010a 01       		.byte	0x1
 355 010b C601     		.2byte	0x1c6
 356 010d 6B000000 		.4byte	0x6b
 357 0111 00000000 		.4byte	.LFB5
 358 0115 20000000 		.4byte	.LFE5-.LFB5
 359 0119 01       		.uleb128 0x1
 360 011a 9C       		.byte	0x9c
 361 011b 2F010000 		.4byte	0x12f
 362 011f 0A       		.uleb128 0xa
 363 0120 81010000 		.4byte	.LASF20
 364 0124 01       		.byte	0x1
 365 0125 C801     		.2byte	0x1c8
 366 0127 6B000000 		.4byte	0x6b
 367 012b 02       		.uleb128 0x2
 368 012c 91       		.byte	0x91
 369 012d 74       		.sleb128 -12
 370 012e 00       		.byte	0
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 16


 371 012f 0B       		.uleb128 0xb
 372 0130 0E000000 		.4byte	.LASF26
 373 0134 01       		.byte	0x1
 374 0135 DC01     		.2byte	0x1dc
 375 0137 6B000000 		.4byte	0x6b
 376 013b 00000000 		.4byte	.LFB6
 377 013f 20000000 		.4byte	.LFE6-.LFB6
 378 0143 01       		.uleb128 0x1
 379 0144 9C       		.byte	0x9c
 380 0145 0A       		.uleb128 0xa
 381 0146 DE010000 		.4byte	.LASF21
 382 014a 01       		.byte	0x1
 383 014b DE01     		.2byte	0x1de
 384 014d 6B000000 		.4byte	0x6b
 385 0151 02       		.uleb128 0x2
 386 0152 91       		.byte	0x91
 387 0153 74       		.sleb128 -12
 388 0154 00       		.byte	0
 389 0155 00       		.byte	0
 390              		.section	.debug_abbrev,"",%progbits
 391              	.Ldebug_abbrev0:
 392 0000 01       		.uleb128 0x1
 393 0001 11       		.uleb128 0x11
 394 0002 01       		.byte	0x1
 395 0003 25       		.uleb128 0x25
 396 0004 0E       		.uleb128 0xe
 397 0005 13       		.uleb128 0x13
 398 0006 0B       		.uleb128 0xb
 399 0007 03       		.uleb128 0x3
 400 0008 0E       		.uleb128 0xe
 401 0009 1B       		.uleb128 0x1b
 402 000a 0E       		.uleb128 0xe
 403 000b 55       		.uleb128 0x55
 404 000c 17       		.uleb128 0x17
 405 000d 11       		.uleb128 0x11
 406 000e 01       		.uleb128 0x1
 407 000f 10       		.uleb128 0x10
 408 0010 17       		.uleb128 0x17
 409 0011 00       		.byte	0
 410 0012 00       		.byte	0
 411 0013 02       		.uleb128 0x2
 412 0014 24       		.uleb128 0x24
 413 0015 00       		.byte	0
 414 0016 0B       		.uleb128 0xb
 415 0017 0B       		.uleb128 0xb
 416 0018 3E       		.uleb128 0x3e
 417 0019 0B       		.uleb128 0xb
 418 001a 03       		.uleb128 0x3
 419 001b 0E       		.uleb128 0xe
 420 001c 00       		.byte	0
 421 001d 00       		.byte	0
 422 001e 03       		.uleb128 0x3
 423 001f 24       		.uleb128 0x24
 424 0020 00       		.byte	0
 425 0021 0B       		.uleb128 0xb
 426 0022 0B       		.uleb128 0xb
 427 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 17


 428 0024 0B       		.uleb128 0xb
 429 0025 03       		.uleb128 0x3
 430 0026 08       		.uleb128 0x8
 431 0027 00       		.byte	0
 432 0028 00       		.byte	0
 433 0029 04       		.uleb128 0x4
 434 002a 16       		.uleb128 0x16
 435 002b 00       		.byte	0
 436 002c 03       		.uleb128 0x3
 437 002d 0E       		.uleb128 0xe
 438 002e 3A       		.uleb128 0x3a
 439 002f 0B       		.uleb128 0xb
 440 0030 3B       		.uleb128 0x3b
 441 0031 05       		.uleb128 0x5
 442 0032 49       		.uleb128 0x49
 443 0033 13       		.uleb128 0x13
 444 0034 00       		.byte	0
 445 0035 00       		.byte	0
 446 0036 05       		.uleb128 0x5
 447 0037 35       		.uleb128 0x35
 448 0038 00       		.byte	0
 449 0039 49       		.uleb128 0x49
 450 003a 13       		.uleb128 0x13
 451 003b 00       		.byte	0
 452 003c 00       		.byte	0
 453 003d 06       		.uleb128 0x6
 454 003e 2E       		.uleb128 0x2e
 455 003f 01       		.byte	0x1
 456 0040 3F       		.uleb128 0x3f
 457 0041 19       		.uleb128 0x19
 458 0042 03       		.uleb128 0x3
 459 0043 0E       		.uleb128 0xe
 460 0044 3A       		.uleb128 0x3a
 461 0045 0B       		.uleb128 0xb
 462 0046 3B       		.uleb128 0x3b
 463 0047 0B       		.uleb128 0xb
 464 0048 27       		.uleb128 0x27
 465 0049 19       		.uleb128 0x19
 466 004a 49       		.uleb128 0x49
 467 004b 13       		.uleb128 0x13
 468 004c 11       		.uleb128 0x11
 469 004d 01       		.uleb128 0x1
 470 004e 12       		.uleb128 0x12
 471 004f 06       		.uleb128 0x6
 472 0050 40       		.uleb128 0x40
 473 0051 18       		.uleb128 0x18
 474 0052 9742     		.uleb128 0x2117
 475 0054 19       		.uleb128 0x19
 476 0055 01       		.uleb128 0x1
 477 0056 13       		.uleb128 0x13
 478 0057 00       		.byte	0
 479 0058 00       		.byte	0
 480 0059 07       		.uleb128 0x7
 481 005a 34       		.uleb128 0x34
 482 005b 00       		.byte	0
 483 005c 03       		.uleb128 0x3
 484 005d 0E       		.uleb128 0xe
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 18


 485 005e 3A       		.uleb128 0x3a
 486 005f 0B       		.uleb128 0xb
 487 0060 3B       		.uleb128 0x3b
 488 0061 0B       		.uleb128 0xb
 489 0062 49       		.uleb128 0x49
 490 0063 13       		.uleb128 0x13
 491 0064 02       		.uleb128 0x2
 492 0065 18       		.uleb128 0x18
 493 0066 00       		.byte	0
 494 0067 00       		.byte	0
 495 0068 08       		.uleb128 0x8
 496 0069 2E       		.uleb128 0x2e
 497 006a 00       		.byte	0
 498 006b 3F       		.uleb128 0x3f
 499 006c 19       		.uleb128 0x19
 500 006d 03       		.uleb128 0x3
 501 006e 0E       		.uleb128 0xe
 502 006f 3A       		.uleb128 0x3a
 503 0070 0B       		.uleb128 0xb
 504 0071 3B       		.uleb128 0x3b
 505 0072 0B       		.uleb128 0xb
 506 0073 27       		.uleb128 0x27
 507 0074 19       		.uleb128 0x19
 508 0075 11       		.uleb128 0x11
 509 0076 01       		.uleb128 0x1
 510 0077 12       		.uleb128 0x12
 511 0078 06       		.uleb128 0x6
 512 0079 40       		.uleb128 0x40
 513 007a 18       		.uleb128 0x18
 514 007b 9742     		.uleb128 0x2117
 515 007d 19       		.uleb128 0x19
 516 007e 00       		.byte	0
 517 007f 00       		.byte	0
 518 0080 09       		.uleb128 0x9
 519 0081 2E       		.uleb128 0x2e
 520 0082 01       		.byte	0x1
 521 0083 3F       		.uleb128 0x3f
 522 0084 19       		.uleb128 0x19
 523 0085 03       		.uleb128 0x3
 524 0086 0E       		.uleb128 0xe
 525 0087 3A       		.uleb128 0x3a
 526 0088 0B       		.uleb128 0xb
 527 0089 3B       		.uleb128 0x3b
 528 008a 05       		.uleb128 0x5
 529 008b 27       		.uleb128 0x27
 530 008c 19       		.uleb128 0x19
 531 008d 49       		.uleb128 0x49
 532 008e 13       		.uleb128 0x13
 533 008f 11       		.uleb128 0x11
 534 0090 01       		.uleb128 0x1
 535 0091 12       		.uleb128 0x12
 536 0092 06       		.uleb128 0x6
 537 0093 40       		.uleb128 0x40
 538 0094 18       		.uleb128 0x18
 539 0095 9742     		.uleb128 0x2117
 540 0097 19       		.uleb128 0x19
 541 0098 01       		.uleb128 0x1
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 19


 542 0099 13       		.uleb128 0x13
 543 009a 00       		.byte	0
 544 009b 00       		.byte	0
 545 009c 0A       		.uleb128 0xa
 546 009d 34       		.uleb128 0x34
 547 009e 00       		.byte	0
 548 009f 03       		.uleb128 0x3
 549 00a0 0E       		.uleb128 0xe
 550 00a1 3A       		.uleb128 0x3a
 551 00a2 0B       		.uleb128 0xb
 552 00a3 3B       		.uleb128 0x3b
 553 00a4 05       		.uleb128 0x5
 554 00a5 49       		.uleb128 0x49
 555 00a6 13       		.uleb128 0x13
 556 00a7 02       		.uleb128 0x2
 557 00a8 18       		.uleb128 0x18
 558 00a9 00       		.byte	0
 559 00aa 00       		.byte	0
 560 00ab 0B       		.uleb128 0xb
 561 00ac 2E       		.uleb128 0x2e
 562 00ad 01       		.byte	0x1
 563 00ae 3F       		.uleb128 0x3f
 564 00af 19       		.uleb128 0x19
 565 00b0 03       		.uleb128 0x3
 566 00b1 0E       		.uleb128 0xe
 567 00b2 3A       		.uleb128 0x3a
 568 00b3 0B       		.uleb128 0xb
 569 00b4 3B       		.uleb128 0x3b
 570 00b5 05       		.uleb128 0x5
 571 00b6 27       		.uleb128 0x27
 572 00b7 19       		.uleb128 0x19
 573 00b8 49       		.uleb128 0x49
 574 00b9 13       		.uleb128 0x13
 575 00ba 11       		.uleb128 0x11
 576 00bb 01       		.uleb128 0x1
 577 00bc 12       		.uleb128 0x12
 578 00bd 06       		.uleb128 0x6
 579 00be 40       		.uleb128 0x40
 580 00bf 18       		.uleb128 0x18
 581 00c0 9742     		.uleb128 0x2117
 582 00c2 19       		.uleb128 0x19
 583 00c3 00       		.byte	0
 584 00c4 00       		.byte	0
 585 00c5 00       		.byte	0
 586              		.section	.debug_aranges,"",%progbits
 587 0000 3C000000 		.4byte	0x3c
 588 0004 0200     		.2byte	0x2
 589 0006 00000000 		.4byte	.Ldebug_info0
 590 000a 04       		.byte	0x4
 591 000b 00       		.byte	0
 592 000c 0000     		.2byte	0
 593 000e 0000     		.2byte	0
 594 0010 00000000 		.4byte	.LFB2
 595 0014 20000000 		.4byte	.LFE2-.LFB2
 596 0018 00000000 		.4byte	.LFB3
 597 001c 20000000 		.4byte	.LFE3-.LFB3
 598 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 20


 599 0024 2C000000 		.4byte	.LFE4-.LFB4
 600 0028 00000000 		.4byte	.LFB5
 601 002c 20000000 		.4byte	.LFE5-.LFB5
 602 0030 00000000 		.4byte	.LFB6
 603 0034 20000000 		.4byte	.LFE6-.LFB6
 604 0038 00000000 		.4byte	0
 605 003c 00000000 		.4byte	0
 606              		.section	.debug_ranges,"",%progbits
 607              	.Ldebug_ranges0:
 608 0000 00000000 		.4byte	.LFB2
 609 0004 20000000 		.4byte	.LFE2
 610 0008 00000000 		.4byte	.LFB3
 611 000c 20000000 		.4byte	.LFE3
 612 0010 00000000 		.4byte	.LFB4
 613 0014 2C000000 		.4byte	.LFE4
 614 0018 00000000 		.4byte	.LFB5
 615 001c 20000000 		.4byte	.LFE5
 616 0020 00000000 		.4byte	.LFB6
 617 0024 20000000 		.4byte	.LFE6
 618 0028 00000000 		.4byte	0
 619 002c 00000000 		.4byte	0
 620              		.section	.debug_line,"",%progbits
 621              	.Ldebug_line0:
 622 0000 B9000000 		.section	.debug_str,"MS",%progbits,1
 622      02004C00 
 622      00000201 
 622      FB0E0D00 
 622      01010101 
 623              	.LASF6:
 624 0000 6C6F6E67 		.ascii	"long long int\000"
 624      206C6F6E 
 624      6720696E 
 624      7400
 625              	.LASF26:
 626 000e 55415254 		.ascii	"UART_1_SpiUartDisableIntTx\000"
 626      5F315F53 
 626      70695561 
 626      72744469 
 626      7361626C 
 627              	.LASF8:
 628 0029 756E7369 		.ascii	"unsigned int\000"
 628      676E6564 
 628      20696E74 
 628      00
 629              	.LASF12:
 630 0036 75696E74 		.ascii	"uint32\000"
 630      333200
 631              	.LASF16:
 632 003d 55415254 		.ascii	"UART_1_SpiUartGetRxBufferSize\000"
 632      5F315F53 
 632      70695561 
 632      72744765 
 632      74527842 
 633              	.LASF19:
 634 005b 55415254 		.ascii	"UART_1_SpiUartDisableIntRx\000"
 634      5F315F53 
 634      70695561 
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 21


 634      72744469 
 634      7361626C 
 635              	.LASF5:
 636 0076 6C6F6E67 		.ascii	"long unsigned int\000"
 636      20756E73 
 636      69676E65 
 636      6420696E 
 636      7400
 637              	.LASF7:
 638 0088 6C6F6E67 		.ascii	"long long unsigned int\000"
 638      206C6F6E 
 638      6720756E 
 638      7369676E 
 638      65642069 
 639              	.LASF9:
 640 009f 666C6F61 		.ascii	"float\000"
 640      7400
 641              	.LASF17:
 642 00a5 72784461 		.ascii	"rxData\000"
 642      746100
 643              	.LASF1:
 644 00ac 756E7369 		.ascii	"unsigned char\000"
 644      676E6564 
 644      20636861 
 644      7200
 645              	.LASF15:
 646 00ba 55415254 		.ascii	"UART_1_SpiUartReadRxData\000"
 646      5F315F53 
 646      70695561 
 646      72745265 
 646      61645278 
 647              	.LASF11:
 648 00d3 63686172 		.ascii	"char\000"
 648      00
 649              	.LASF4:
 650 00d8 6C6F6E67 		.ascii	"long int\000"
 650      20696E74 
 650      00
 651              	.LASF10:
 652 00e1 646F7562 		.ascii	"double\000"
 652      6C6500
 653              	.LASF24:
 654 00e8 433A5C55 		.ascii	"C:\\Users\\Aaron Wubshet\\Google Drive\\1 College\\"
 654      73657273 
 654      5C416172 
 654      6F6E2057 
 654      75627368 
 655 0116 3220536F 		.ascii	"2 Sophomore Year\\3 SPRING\\6.115\\Final Project PS"
 655      70686F6D 
 655      6F726520 
 655      59656172 
 655      5C332053 
 656 0146 6F432057 		.ascii	"oC Workspace\\Final Project\\BLE_UART_peripheral_OT"
 656      6F726B73 
 656      70616365 
 656      5C46696E 
 656      616C2050 
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 22


 657 0177 4845522E 		.ascii	"HER.cydsn\000"
 657      63796473 
 657      6E00
 658              	.LASF20:
 659 0181 696E7453 		.ascii	"intSource\000"
 659      6F757263 
 659      6500
 660              	.LASF13:
 661 018b 72656733 		.ascii	"reg32\000"
 661      3200
 662              	.LASF23:
 663 0191 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_1_SPI_UART.c\000"
 663      72617465 
 663      645F536F 
 663      75726365 
 663      5C50536F 
 664              	.LASF3:
 665 01ba 73686F72 		.ascii	"short unsigned int\000"
 665      7420756E 
 665      7369676E 
 665      65642069 
 665      6E7400
 666              	.LASF0:
 667 01cd 7369676E 		.ascii	"signed char\000"
 667      65642063 
 667      68617200 
 668              	.LASF18:
 669 01d9 73697A65 		.ascii	"size\000"
 669      00
 670              	.LASF21:
 671 01de 696E7453 		.ascii	"intSourceMask\000"
 671      6F757263 
 671      654D6173 
 671      6B00
 672              	.LASF25:
 673 01ec 55415254 		.ascii	"UART_1_SpiUartClearRxBuffer\000"
 673      5F315F53 
 673      70695561 
 673      7274436C 
 673      65617252 
 674              	.LASF2:
 675 0208 73686F72 		.ascii	"short int\000"
 675      7420696E 
 675      7400
 676              	.LASF22:
 677 0212 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 677      4320342E 
 677      392E3320 
 677      32303135 
 677      30333033 
 678 0245 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 678      20726576 
 678      6973696F 
 678      6E203232 
 678      31323230 
 679 0278 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 679      66756E63 
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccEdoS4K.s 			page 23


 679      74696F6E 
 679      2D736563 
 679      74696F6E 
 680              	.LASF14:
 681 02a0 73697A65 		.ascii	"sizetype\000"
 681      74797065 
 681      00
 682              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
