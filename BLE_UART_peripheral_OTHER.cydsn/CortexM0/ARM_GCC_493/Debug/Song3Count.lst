ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Song3Count.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Song3Count_SetDriveMode,"ax",%progbits
  18              		.align	2
  19              		.global	Song3Count_SetDriveMode
  20              		.code	16
  21              		.thumb_func
  22              		.type	Song3Count_SetDriveMode, %function
  23              	Song3Count_SetDriveMode:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\Song3Count.c"
   1:Generated_Source\PSoC4/Song3Count.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Song3Count.c **** * File Name: Song3Count.c  
   3:Generated_Source\PSoC4/Song3Count.c **** * Version 2.20
   4:Generated_Source\PSoC4/Song3Count.c **** *
   5:Generated_Source\PSoC4/Song3Count.c **** * Description:
   6:Generated_Source\PSoC4/Song3Count.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/Song3Count.c **** *
   8:Generated_Source\PSoC4/Song3Count.c **** ********************************************************************************
   9:Generated_Source\PSoC4/Song3Count.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/Song3Count.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/Song3Count.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/Song3Count.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/Song3Count.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/Song3Count.c **** 
  15:Generated_Source\PSoC4/Song3Count.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/Song3Count.c **** #include "Song3Count.h"
  17:Generated_Source\PSoC4/Song3Count.c **** 
  18:Generated_Source\PSoC4/Song3Count.c **** 
  19:Generated_Source\PSoC4/Song3Count.c **** #if defined(Song3Count__PC)
  20:Generated_Source\PSoC4/Song3Count.c ****     #define Song3Count_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/Song3Count.c ****     do { \
  22:Generated_Source\PSoC4/Song3Count.c ****         Song3Count_PC =   (Song3Count_PC & \
  23:Generated_Source\PSoC4/Song3Count.c ****                                 (uint32)(~(uint32)(Song3Count_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/Song3Count.c ****                                 (Song3Count_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/Song3Count.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/Song3Count.c ****                                 (Song3Count_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/Song3Count.c ****     } while (0)
  28:Generated_Source\PSoC4/Song3Count.c **** #else
  29:Generated_Source\PSoC4/Song3Count.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/Song3Count.c ****         #define Song3Count_SetP4PinDriveMode(shift, mode)  \
  31:Generated_Source\PSoC4/Song3Count.c ****         do { \
  32:Generated_Source\PSoC4/Song3Count.c ****             Song3Count_USBIO_CTRL_REG = (Song3Count_USBIO_CTRL_REG & \
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 2


  33:Generated_Source\PSoC4/Song3Count.c ****                                     (uint32)(~(uint32)(Song3Count_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/Song3Count.c ****                                     (Song3Count_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/Song3Count.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/Song3Count.c ****                                     (Song3Count_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/Song3Count.c ****         } while (0)
  38:Generated_Source\PSoC4/Song3Count.c ****     #endif
  39:Generated_Source\PSoC4/Song3Count.c **** #endif
  40:Generated_Source\PSoC4/Song3Count.c ****   
  41:Generated_Source\PSoC4/Song3Count.c **** 
  42:Generated_Source\PSoC4/Song3Count.c **** #if defined(Song3Count__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/Song3Count.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/Song3Count.c ****     * Function Name: Song3Count_SetDriveMode
  45:Generated_Source\PSoC4/Song3Count.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/Song3Count.c ****     *
  47:Generated_Source\PSoC4/Song3Count.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/Song3Count.c ****     * 
  49:Generated_Source\PSoC4/Song3Count.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/Song3Count.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/Song3Count.c ****     *
  52:Generated_Source\PSoC4/Song3Count.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/Song3Count.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/Song3Count.c ****     *
  55:Generated_Source\PSoC4/Song3Count.c ****     * \param mode
  56:Generated_Source\PSoC4/Song3Count.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/Song3Count.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/Song3Count.c ****     *
  59:Generated_Source\PSoC4/Song3Count.c ****     * \return
  60:Generated_Source\PSoC4/Song3Count.c ****     *  None
  61:Generated_Source\PSoC4/Song3Count.c ****     *
  62:Generated_Source\PSoC4/Song3Count.c ****     * \sideeffect
  63:Generated_Source\PSoC4/Song3Count.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/Song3Count.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/Song3Count.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/Song3Count.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/Song3Count.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/Song3Count.c ****     *
  69:Generated_Source\PSoC4/Song3Count.c ****     * \funcusage
  70:Generated_Source\PSoC4/Song3Count.c ****     *  \snippet Song3Count_SUT.c usage_Song3Count_SetDriveMode
  71:Generated_Source\PSoC4/Song3Count.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/Song3Count.c ****     void Song3Count_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/Song3Count.c ****     {
  26              		.loc 1 73 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 021C     		mov	r2, r0
  37 0008 FB1D     		add	r3, r7, #7
  38 000a 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/Song3Count.c **** 		Song3Count_SetP4PinDriveMode(Song3Count__0__SHIFT, mode);
  39              		.loc 1 74 0
  40 000c 154B     		ldr	r3, .L2
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 3


  41 000e 154A     		ldr	r2, .L2
  42 0010 1268     		ldr	r2, [r2]
  43 0012 1549     		ldr	r1, .L2+4
  44 0014 1140     		and	r1, r2
  45 0016 FA1D     		add	r2, r7, #7
  46 0018 1278     		ldrb	r2, [r2]
  47 001a 1203     		lsl	r2, r2, #12
  48 001c 0A43     		orr	r2, r1
  49 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/Song3Count.c **** 		Song3Count_SetP4PinDriveMode(Song3Count__1__SHIFT, mode);
  50              		.loc 1 75 0
  51 0020 104B     		ldr	r3, .L2
  52 0022 104A     		ldr	r2, .L2
  53 0024 1268     		ldr	r2, [r2]
  54 0026 1149     		ldr	r1, .L2+8
  55 0028 1140     		and	r1, r2
  56 002a FA1D     		add	r2, r7, #7
  57 002c 1278     		ldrb	r2, [r2]
  58 002e D203     		lsl	r2, r2, #15
  59 0030 0A43     		orr	r2, r1
  60 0032 1A60     		str	r2, [r3]
  76:Generated_Source\PSoC4/Song3Count.c **** 		Song3Count_SetP4PinDriveMode(Song3Count__2__SHIFT, mode);
  61              		.loc 1 76 0
  62 0034 0B4B     		ldr	r3, .L2
  63 0036 0B4A     		ldr	r2, .L2
  64 0038 1268     		ldr	r2, [r2]
  65 003a 0D49     		ldr	r1, .L2+12
  66 003c 1140     		and	r1, r2
  67 003e FA1D     		add	r2, r7, #7
  68 0040 1278     		ldrb	r2, [r2]
  69 0042 9204     		lsl	r2, r2, #18
  70 0044 0A43     		orr	r2, r1
  71 0046 1A60     		str	r2, [r3]
  77:Generated_Source\PSoC4/Song3Count.c **** 		Song3Count_SetP4PinDriveMode(Song3Count__3__SHIFT, mode);
  72              		.loc 1 77 0
  73 0048 064B     		ldr	r3, .L2
  74 004a 064A     		ldr	r2, .L2
  75 004c 1268     		ldr	r2, [r2]
  76 004e 0949     		ldr	r1, .L2+16
  77 0050 1140     		and	r1, r2
  78 0052 FA1D     		add	r2, r7, #7
  79 0054 1278     		ldrb	r2, [r2]
  80 0056 5205     		lsl	r2, r2, #21
  81 0058 0A43     		orr	r2, r1
  82 005a 1A60     		str	r2, [r3]
  78:Generated_Source\PSoC4/Song3Count.c ****     }
  83              		.loc 1 78 0
  84 005c BD46     		mov	sp, r7
  85 005e 02B0     		add	sp, sp, #8
  86              		@ sp needed
  87 0060 80BD     		pop	{r7, pc}
  88              	.L3:
  89 0062 C046     		.align	2
  90              	.L2:
  91 0064 08030440 		.word	1074004744
  92 0068 FF8FFFFF 		.word	-28673
  93 006c FF7FFCFF 		.word	-229377
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 4


  94 0070 FFFFE3FF 		.word	-1835009
  95 0074 FFFF1FFF 		.word	-14680065
  96              		.cfi_endproc
  97              	.LFE0:
  98              		.size	Song3Count_SetDriveMode, .-Song3Count_SetDriveMode
  99              		.section	.text.Song3Count_Write,"ax",%progbits
 100              		.align	2
 101              		.global	Song3Count_Write
 102              		.code	16
 103              		.thumb_func
 104              		.type	Song3Count_Write, %function
 105              	Song3Count_Write:
 106              	.LFB1:
  79:Generated_Source\PSoC4/Song3Count.c **** #endif
  80:Generated_Source\PSoC4/Song3Count.c **** 
  81:Generated_Source\PSoC4/Song3Count.c **** 
  82:Generated_Source\PSoC4/Song3Count.c **** /*******************************************************************************
  83:Generated_Source\PSoC4/Song3Count.c **** * Function Name: Song3Count_Write
  84:Generated_Source\PSoC4/Song3Count.c **** ****************************************************************************//**
  85:Generated_Source\PSoC4/Song3Count.c **** *
  86:Generated_Source\PSoC4/Song3Count.c **** * \brief Writes the value to the physical port (data output register), masking
  87:Generated_Source\PSoC4/Song3Count.c **** *  and shifting the bits appropriately. 
  88:Generated_Source\PSoC4/Song3Count.c **** *
  89:Generated_Source\PSoC4/Song3Count.c **** * The data output register controls the signal applied to the physical pin in 
  90:Generated_Source\PSoC4/Song3Count.c **** * conjunction with the drive mode parameter. This function avoids changing 
  91:Generated_Source\PSoC4/Song3Count.c **** * other bits in the port by using the appropriate method (read-modify-write or
  92:Generated_Source\PSoC4/Song3Count.c **** * bit banding).
  93:Generated_Source\PSoC4/Song3Count.c **** *
  94:Generated_Source\PSoC4/Song3Count.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  95:Generated_Source\PSoC4/Song3Count.c **** * as it is driven by the hardware signal attached to it.
  96:Generated_Source\PSoC4/Song3Count.c **** *
  97:Generated_Source\PSoC4/Song3Count.c **** * \param value
  98:Generated_Source\PSoC4/Song3Count.c **** *  Value to write to the component instance.
  99:Generated_Source\PSoC4/Song3Count.c **** *
 100:Generated_Source\PSoC4/Song3Count.c **** * \return 
 101:Generated_Source\PSoC4/Song3Count.c **** *  None 
 102:Generated_Source\PSoC4/Song3Count.c **** *
 103:Generated_Source\PSoC4/Song3Count.c **** * \sideeffect
 104:Generated_Source\PSoC4/Song3Count.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 105:Generated_Source\PSoC4/Song3Count.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 106:Generated_Source\PSoC4/Song3Count.c **** *  interrupts this function and performs writes to the Pins component data 
 107:Generated_Source\PSoC4/Song3Count.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 108:Generated_Source\PSoC4/Song3Count.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 109:Generated_Source\PSoC4/Song3Count.c **** *  this function.
 110:Generated_Source\PSoC4/Song3Count.c **** *
 111:Generated_Source\PSoC4/Song3Count.c **** * \funcusage
 112:Generated_Source\PSoC4/Song3Count.c **** *  \snippet Song3Count_SUT.c usage_Song3Count_Write
 113:Generated_Source\PSoC4/Song3Count.c **** *******************************************************************************/
 114:Generated_Source\PSoC4/Song3Count.c **** void Song3Count_Write(uint8 value)
 115:Generated_Source\PSoC4/Song3Count.c **** {
 107              		.loc 1 115 0
 108              		.cfi_startproc
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 5


 114              		.cfi_def_cfa_offset 24
 115 0004 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
 117 0006 021C     		mov	r2, r0
 118 0008 FB1D     		add	r3, r7, #7
 119 000a 1A70     		strb	r2, [r3]
 116:Generated_Source\PSoC4/Song3Count.c ****     uint8 drVal = (uint8)(Song3Count_DR & (uint8)(~Song3Count_MASK));
 120              		.loc 1 116 0
 121 000c 0D4B     		ldr	r3, .L5
 122 000e 1B68     		ldr	r3, [r3]
 123 0010 DAB2     		uxtb	r2, r3
 124 0012 0F23     		mov	r3, #15
 125 0014 FB18     		add	r3, r7, r3
 126 0016 0F21     		mov	r1, #15
 127 0018 0A40     		and	r2, r1
 128 001a 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC4/Song3Count.c ****     drVal = (drVal | ((uint8)(value << Song3Count_SHIFT) & Song3Count_MASK));
 129              		.loc 1 117 0
 130 001c FB1D     		add	r3, r7, #7
 131 001e 1B78     		ldrb	r3, [r3]
 132 0020 1B01     		lsl	r3, r3, #4
 133 0022 D9B2     		uxtb	r1, r3
 134 0024 0F23     		mov	r3, #15
 135 0026 FB18     		add	r3, r7, r3
 136 0028 0F22     		mov	r2, #15
 137 002a BA18     		add	r2, r7, r2
 138 002c 1278     		ldrb	r2, [r2]
 139 002e 0A43     		orr	r2, r1
 140 0030 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/Song3Count.c ****     Song3Count_DR = (uint32)drVal;
 141              		.loc 1 118 0
 142 0032 044B     		ldr	r3, .L5
 143 0034 0F22     		mov	r2, #15
 144 0036 BA18     		add	r2, r7, r2
 145 0038 1278     		ldrb	r2, [r2]
 146 003a 1A60     		str	r2, [r3]
 119:Generated_Source\PSoC4/Song3Count.c **** }
 147              		.loc 1 119 0
 148 003c BD46     		mov	sp, r7
 149 003e 04B0     		add	sp, sp, #16
 150              		@ sp needed
 151 0040 80BD     		pop	{r7, pc}
 152              	.L6:
 153 0042 C046     		.align	2
 154              	.L5:
 155 0044 00030440 		.word	1074004736
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	Song3Count_Write, .-Song3Count_Write
 159              		.section	.text.Song3Count_Read,"ax",%progbits
 160              		.align	2
 161              		.global	Song3Count_Read
 162              		.code	16
 163              		.thumb_func
 164              		.type	Song3Count_Read, %function
 165              	Song3Count_Read:
 166              	.LFB2:
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 6


 120:Generated_Source\PSoC4/Song3Count.c **** 
 121:Generated_Source\PSoC4/Song3Count.c **** 
 122:Generated_Source\PSoC4/Song3Count.c **** /*******************************************************************************
 123:Generated_Source\PSoC4/Song3Count.c **** * Function Name: Song3Count_Read
 124:Generated_Source\PSoC4/Song3Count.c **** ****************************************************************************//**
 125:Generated_Source\PSoC4/Song3Count.c **** *
 126:Generated_Source\PSoC4/Song3Count.c **** * \brief Reads the associated physical port (pin status register) and masks 
 127:Generated_Source\PSoC4/Song3Count.c **** *  the required bits according to the width and bit position of the component
 128:Generated_Source\PSoC4/Song3Count.c **** *  instance. 
 129:Generated_Source\PSoC4/Song3Count.c **** *
 130:Generated_Source\PSoC4/Song3Count.c **** * The pin's status register returns the current logic level present on the 
 131:Generated_Source\PSoC4/Song3Count.c **** * physical pin.
 132:Generated_Source\PSoC4/Song3Count.c **** *
 133:Generated_Source\PSoC4/Song3Count.c **** * \return 
 134:Generated_Source\PSoC4/Song3Count.c **** *  The current value for the pins in the component as a right justified number.
 135:Generated_Source\PSoC4/Song3Count.c **** *
 136:Generated_Source\PSoC4/Song3Count.c **** * \funcusage
 137:Generated_Source\PSoC4/Song3Count.c **** *  \snippet Song3Count_SUT.c usage_Song3Count_Read  
 138:Generated_Source\PSoC4/Song3Count.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/Song3Count.c **** uint8 Song3Count_Read(void)
 140:Generated_Source\PSoC4/Song3Count.c **** {
 167              		.loc 1 140 0
 168              		.cfi_startproc
 169 0000 80B5     		push	{r7, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/Song3Count.c ****     return (uint8)((Song3Count_PS & Song3Count_MASK) >> Song3Count_SHIFT);
 175              		.loc 1 141 0
 176 0004 044B     		ldr	r3, .L9
 177 0006 1B68     		ldr	r3, [r3]
 178 0008 F022     		mov	r2, #240
 179 000a 1340     		and	r3, r2
 180 000c 1B09     		lsr	r3, r3, #4
 181 000e DBB2     		uxtb	r3, r3
 142:Generated_Source\PSoC4/Song3Count.c **** }
 182              		.loc 1 142 0
 183 0010 181C     		mov	r0, r3
 184 0012 BD46     		mov	sp, r7
 185              		@ sp needed
 186 0014 80BD     		pop	{r7, pc}
 187              	.L10:
 188 0016 C046     		.align	2
 189              	.L9:
 190 0018 04030440 		.word	1074004740
 191              		.cfi_endproc
 192              	.LFE2:
 193              		.size	Song3Count_Read, .-Song3Count_Read
 194              		.section	.text.Song3Count_ReadDataReg,"ax",%progbits
 195              		.align	2
 196              		.global	Song3Count_ReadDataReg
 197              		.code	16
 198              		.thumb_func
 199              		.type	Song3Count_ReadDataReg, %function
 200              	Song3Count_ReadDataReg:
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 7


 201              	.LFB3:
 143:Generated_Source\PSoC4/Song3Count.c **** 
 144:Generated_Source\PSoC4/Song3Count.c **** 
 145:Generated_Source\PSoC4/Song3Count.c **** /*******************************************************************************
 146:Generated_Source\PSoC4/Song3Count.c **** * Function Name: Song3Count_ReadDataReg
 147:Generated_Source\PSoC4/Song3Count.c **** ****************************************************************************//**
 148:Generated_Source\PSoC4/Song3Count.c **** *
 149:Generated_Source\PSoC4/Song3Count.c **** * \brief Reads the associated physical port's data output register and masks 
 150:Generated_Source\PSoC4/Song3Count.c **** *  the correct bits according to the width and bit position of the component 
 151:Generated_Source\PSoC4/Song3Count.c **** *  instance. 
 152:Generated_Source\PSoC4/Song3Count.c **** *
 153:Generated_Source\PSoC4/Song3Count.c **** * The data output register controls the signal applied to the physical pin in 
 154:Generated_Source\PSoC4/Song3Count.c **** * conjunction with the drive mode parameter. This is not the same as the 
 155:Generated_Source\PSoC4/Song3Count.c **** * preferred Song3Count_Read() API because the 
 156:Generated_Source\PSoC4/Song3Count.c **** * Song3Count_ReadDataReg() reads the data register instead of the status 
 157:Generated_Source\PSoC4/Song3Count.c **** * register. For output pins this is a useful function to determine the value 
 158:Generated_Source\PSoC4/Song3Count.c **** * just written to the pin.
 159:Generated_Source\PSoC4/Song3Count.c **** *
 160:Generated_Source\PSoC4/Song3Count.c **** * \return 
 161:Generated_Source\PSoC4/Song3Count.c **** *  The current value of the data register masked and shifted into a right 
 162:Generated_Source\PSoC4/Song3Count.c **** *  justified number for the component instance.
 163:Generated_Source\PSoC4/Song3Count.c **** *
 164:Generated_Source\PSoC4/Song3Count.c **** * \funcusage
 165:Generated_Source\PSoC4/Song3Count.c **** *  \snippet Song3Count_SUT.c usage_Song3Count_ReadDataReg 
 166:Generated_Source\PSoC4/Song3Count.c **** *******************************************************************************/
 167:Generated_Source\PSoC4/Song3Count.c **** uint8 Song3Count_ReadDataReg(void)
 168:Generated_Source\PSoC4/Song3Count.c **** {
 202              		.loc 1 168 0
 203              		.cfi_startproc
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 169:Generated_Source\PSoC4/Song3Count.c ****     return (uint8)((Song3Count_DR & Song3Count_MASK) >> Song3Count_SHIFT);
 210              		.loc 1 169 0
 211 0004 044B     		ldr	r3, .L13
 212 0006 1B68     		ldr	r3, [r3]
 213 0008 F022     		mov	r2, #240
 214 000a 1340     		and	r3, r2
 215 000c 1B09     		lsr	r3, r3, #4
 216 000e DBB2     		uxtb	r3, r3
 170:Generated_Source\PSoC4/Song3Count.c **** }
 217              		.loc 1 170 0
 218 0010 181C     		mov	r0, r3
 219 0012 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0014 80BD     		pop	{r7, pc}
 222              	.L14:
 223 0016 C046     		.align	2
 224              	.L13:
 225 0018 00030440 		.word	1074004736
 226              		.cfi_endproc
 227              	.LFE3:
 228              		.size	Song3Count_ReadDataReg, .-Song3Count_ReadDataReg
 229              		.section	.text.Song3Count_SetInterruptMode,"ax",%progbits
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 8


 230              		.align	2
 231              		.global	Song3Count_SetInterruptMode
 232              		.code	16
 233              		.thumb_func
 234              		.type	Song3Count_SetInterruptMode, %function
 235              	Song3Count_SetInterruptMode:
 236              	.LFB4:
 171:Generated_Source\PSoC4/Song3Count.c **** 
 172:Generated_Source\PSoC4/Song3Count.c **** 
 173:Generated_Source\PSoC4/Song3Count.c **** /*******************************************************************************
 174:Generated_Source\PSoC4/Song3Count.c **** * Function Name: Song3Count_SetInterruptMode
 175:Generated_Source\PSoC4/Song3Count.c **** ****************************************************************************//**
 176:Generated_Source\PSoC4/Song3Count.c **** *
 177:Generated_Source\PSoC4/Song3Count.c **** * \brief Configures the interrupt mode for each of the Pins component's
 178:Generated_Source\PSoC4/Song3Count.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 179:Generated_Source\PSoC4/Song3Count.c **** *  specified in the Pins component.
 180:Generated_Source\PSoC4/Song3Count.c **** *
 181:Generated_Source\PSoC4/Song3Count.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 182:Generated_Source\PSoC4/Song3Count.c **** *  interrupt may trigger it.
 183:Generated_Source\PSoC4/Song3Count.c **** *
 184:Generated_Source\PSoC4/Song3Count.c **** * \param position
 185:Generated_Source\PSoC4/Song3Count.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 186:Generated_Source\PSoC4/Song3Count.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 187:Generated_Source\PSoC4/Song3Count.c **** *  component. Or you may use Song3Count_INTR_ALL to configure the
 188:Generated_Source\PSoC4/Song3Count.c **** *  interrupt mode of all the pins in the Pins component.       
 189:Generated_Source\PSoC4/Song3Count.c **** *  - Song3Count_0_INTR       (First pin in the list)
 190:Generated_Source\PSoC4/Song3Count.c **** *  - Song3Count_1_INTR       (Second pin in the list)
 191:Generated_Source\PSoC4/Song3Count.c **** *  - ...
 192:Generated_Source\PSoC4/Song3Count.c **** *  - Song3Count_INTR_ALL     (All pins in Pins component)
 193:Generated_Source\PSoC4/Song3Count.c **** *
 194:Generated_Source\PSoC4/Song3Count.c **** * \param mode
 195:Generated_Source\PSoC4/Song3Count.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 196:Generated_Source\PSoC4/Song3Count.c **** *  \ref intrMode.
 197:Generated_Source\PSoC4/Song3Count.c **** *
 198:Generated_Source\PSoC4/Song3Count.c **** * \return 
 199:Generated_Source\PSoC4/Song3Count.c **** *  None
 200:Generated_Source\PSoC4/Song3Count.c **** *  
 201:Generated_Source\PSoC4/Song3Count.c **** * \sideeffect
 202:Generated_Source\PSoC4/Song3Count.c **** *  It is recommended that the interrupt be disabled before calling this 
 203:Generated_Source\PSoC4/Song3Count.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 204:Generated_Source\PSoC4/Song3Count.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 205:Generated_Source\PSoC4/Song3Count.c **** *  port.
 206:Generated_Source\PSoC4/Song3Count.c **** *
 207:Generated_Source\PSoC4/Song3Count.c **** * \funcusage
 208:Generated_Source\PSoC4/Song3Count.c **** *  \snippet Song3Count_SUT.c usage_Song3Count_SetInterruptMode
 209:Generated_Source\PSoC4/Song3Count.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/Song3Count.c **** void Song3Count_SetInterruptMode(uint16 position, uint16 mode)
 211:Generated_Source\PSoC4/Song3Count.c **** {
 237              		.loc 1 211 0
 238              		.cfi_startproc
 239 0000 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 84B0     		sub	sp, sp, #16
 244              		.cfi_def_cfa_offset 24
 245 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 9


 246              		.cfi_def_cfa_register 7
 247 0006 021C     		mov	r2, r0
 248 0008 BB1D     		add	r3, r7, #6
 249 000a 1A80     		strh	r2, [r3]
 250 000c 3B1D     		add	r3, r7, #4
 251 000e 0A1C     		add	r2, r1, #0
 252 0010 1A80     		strh	r2, [r3]
 212:Generated_Source\PSoC4/Song3Count.c ****     uint32 intrCfg;
 213:Generated_Source\PSoC4/Song3Count.c ****     
 214:Generated_Source\PSoC4/Song3Count.c ****     intrCfg =  Song3Count_INTCFG & (uint32)(~(uint32)position);
 253              		.loc 1 214 0
 254 0012 0A4B     		ldr	r3, .L16
 255 0014 1B68     		ldr	r3, [r3]
 256 0016 BA1D     		add	r2, r7, #6
 257 0018 1288     		ldrh	r2, [r2]
 258 001a D243     		mvn	r2, r2
 259 001c 1340     		and	r3, r2
 260 001e FB60     		str	r3, [r7, #12]
 215:Generated_Source\PSoC4/Song3Count.c ****     Song3Count_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 261              		.loc 1 215 0
 262 0020 064B     		ldr	r3, .L16
 263 0022 BA1D     		add	r2, r7, #6
 264 0024 391D     		add	r1, r7, #4
 265 0026 1288     		ldrh	r2, [r2]
 266 0028 0988     		ldrh	r1, [r1]
 267 002a 0A40     		and	r2, r1
 268 002c 92B2     		uxth	r2, r2
 269 002e 111C     		mov	r1, r2
 270 0030 FA68     		ldr	r2, [r7, #12]
 271 0032 0A43     		orr	r2, r1
 272 0034 1A60     		str	r2, [r3]
 216:Generated_Source\PSoC4/Song3Count.c **** }
 273              		.loc 1 216 0
 274 0036 BD46     		mov	sp, r7
 275 0038 04B0     		add	sp, sp, #16
 276              		@ sp needed
 277 003a 80BD     		pop	{r7, pc}
 278              	.L17:
 279              		.align	2
 280              	.L16:
 281 003c 0C030440 		.word	1074004748
 282              		.cfi_endproc
 283              	.LFE4:
 284              		.size	Song3Count_SetInterruptMode, .-Song3Count_SetInterruptMode
 285              		.section	.text.Song3Count_ClearInterrupt,"ax",%progbits
 286              		.align	2
 287              		.global	Song3Count_ClearInterrupt
 288              		.code	16
 289              		.thumb_func
 290              		.type	Song3Count_ClearInterrupt, %function
 291              	Song3Count_ClearInterrupt:
 292              	.LFB5:
 217:Generated_Source\PSoC4/Song3Count.c **** 
 218:Generated_Source\PSoC4/Song3Count.c **** 
 219:Generated_Source\PSoC4/Song3Count.c **** /*******************************************************************************
 220:Generated_Source\PSoC4/Song3Count.c **** * Function Name: Song3Count_ClearInterrupt
 221:Generated_Source\PSoC4/Song3Count.c **** ****************************************************************************//**
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 10


 222:Generated_Source\PSoC4/Song3Count.c **** *
 223:Generated_Source\PSoC4/Song3Count.c **** * \brief Clears any active interrupts attached with the component and returns 
 224:Generated_Source\PSoC4/Song3Count.c **** *  the value of the interrupt status register allowing determination of which
 225:Generated_Source\PSoC4/Song3Count.c **** *  pins generated an interrupt event.
 226:Generated_Source\PSoC4/Song3Count.c **** *
 227:Generated_Source\PSoC4/Song3Count.c **** * \return 
 228:Generated_Source\PSoC4/Song3Count.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 229:Generated_Source\PSoC4/Song3Count.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 230:Generated_Source\PSoC4/Song3Count.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 231:Generated_Source\PSoC4/Song3Count.c **** *  
 232:Generated_Source\PSoC4/Song3Count.c **** * \sideeffect
 233:Generated_Source\PSoC4/Song3Count.c **** *  Clears all bits of the physical port's interrupt status register, not just
 234:Generated_Source\PSoC4/Song3Count.c **** *  those associated with the Pins component.
 235:Generated_Source\PSoC4/Song3Count.c **** *
 236:Generated_Source\PSoC4/Song3Count.c **** * \funcusage
 237:Generated_Source\PSoC4/Song3Count.c **** *  \snippet Song3Count_SUT.c usage_Song3Count_ClearInterrupt
 238:Generated_Source\PSoC4/Song3Count.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/Song3Count.c **** uint8 Song3Count_ClearInterrupt(void)
 240:Generated_Source\PSoC4/Song3Count.c **** {
 293              		.loc 1 240 0
 294              		.cfi_startproc
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/Song3Count.c **** 	uint8 maskedStatus = (uint8)(Song3Count_INTSTAT & Song3Count_MASK);
 303              		.loc 1 241 0
 304 0006 094B     		ldr	r3, .L20
 305 0008 1B68     		ldr	r3, [r3]
 306 000a DAB2     		uxtb	r2, r3
 307 000c FB1D     		add	r3, r7, #7
 308 000e 0F21     		mov	r1, #15
 309 0010 8A43     		bic	r2, r1
 310 0012 1A70     		strb	r2, [r3]
 242:Generated_Source\PSoC4/Song3Count.c **** 	Song3Count_INTSTAT = maskedStatus;
 311              		.loc 1 242 0
 312 0014 054B     		ldr	r3, .L20
 313 0016 FA1D     		add	r2, r7, #7
 314 0018 1278     		ldrb	r2, [r2]
 315 001a 1A60     		str	r2, [r3]
 243:Generated_Source\PSoC4/Song3Count.c ****     return maskedStatus >> Song3Count_SHIFT;
 316              		.loc 1 243 0
 317 001c FB1D     		add	r3, r7, #7
 318 001e 1B78     		ldrb	r3, [r3]
 319 0020 1B09     		lsr	r3, r3, #4
 320 0022 DBB2     		uxtb	r3, r3
 244:Generated_Source\PSoC4/Song3Count.c **** }
 321              		.loc 1 244 0
 322 0024 181C     		mov	r0, r3
 323 0026 BD46     		mov	sp, r7
 324 0028 02B0     		add	sp, sp, #8
 325              		@ sp needed
 326 002a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 11


 327              	.L21:
 328              		.align	2
 329              	.L20:
 330 002c 10030440 		.word	1074004752
 331              		.cfi_endproc
 332              	.LFE5:
 333              		.size	Song3Count_ClearInterrupt, .-Song3Count_ClearInterrupt
 334              		.text
 335              	.Letext0:
 336              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 337              		.section	.debug_info,"",%progbits
 338              	.Ldebug_info0:
 339 0000 96010000 		.4byte	0x196
 340 0004 0400     		.2byte	0x4
 341 0006 00000000 		.4byte	.Ldebug_abbrev0
 342 000a 04       		.byte	0x4
 343 000b 01       		.uleb128 0x1
 344 000c BA000000 		.4byte	.LASF28
 345 0010 01       		.byte	0x1
 346 0011 0C000000 		.4byte	.LASF29
 347 0015 5F010000 		.4byte	.LASF30
 348 0019 00000000 		.4byte	.Ldebug_ranges0+0
 349 001d 00000000 		.4byte	0
 350 0021 00000000 		.4byte	.Ldebug_line0
 351 0025 02       		.uleb128 0x2
 352 0026 01       		.byte	0x1
 353 0027 06       		.byte	0x6
 354 0028 A4020000 		.4byte	.LASF0
 355 002c 02       		.uleb128 0x2
 356 002d 01       		.byte	0x1
 357 002e 08       		.byte	0x8
 358 002f 52000000 		.4byte	.LASF1
 359 0033 02       		.uleb128 0x2
 360 0034 02       		.byte	0x2
 361 0035 05       		.byte	0x5
 362 0036 60020000 		.4byte	.LASF2
 363 003a 02       		.uleb128 0x2
 364 003b 02       		.byte	0x2
 365 003c 07       		.byte	0x7
 366 003d A0000000 		.4byte	.LASF3
 367 0041 02       		.uleb128 0x2
 368 0042 04       		.byte	0x4
 369 0043 05       		.byte	0x5
 370 0044 9B020000 		.4byte	.LASF4
 371 0048 02       		.uleb128 0x2
 372 0049 04       		.byte	0x4
 373 004a 07       		.byte	0x7
 374 004b 7E000000 		.4byte	.LASF5
 375 004f 02       		.uleb128 0x2
 376 0050 08       		.byte	0x8
 377 0051 05       		.byte	0x5
 378 0052 40020000 		.4byte	.LASF6
 379 0056 02       		.uleb128 0x2
 380 0057 08       		.byte	0x8
 381 0058 07       		.byte	0x7
 382 0059 0D020000 		.4byte	.LASF7
 383 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 12


 384 005e 04       		.byte	0x4
 385 005f 05       		.byte	0x5
 386 0060 696E7400 		.ascii	"int\000"
 387 0064 02       		.uleb128 0x2
 388 0065 04       		.byte	0x4
 389 0066 07       		.byte	0x7
 390 0067 00020000 		.4byte	.LASF8
 391 006b 04       		.uleb128 0x4
 392 006c 7B020000 		.4byte	.LASF9
 393 0070 02       		.byte	0x2
 394 0071 B901     		.2byte	0x1b9
 395 0073 2C000000 		.4byte	0x2c
 396 0077 04       		.uleb128 0x4
 397 0078 48010000 		.4byte	.LASF10
 398 007c 02       		.byte	0x2
 399 007d BA01     		.2byte	0x1ba
 400 007f 3A000000 		.4byte	0x3a
 401 0083 04       		.uleb128 0x4
 402 0084 58010000 		.4byte	.LASF11
 403 0088 02       		.byte	0x2
 404 0089 BB01     		.2byte	0x1bb
 405 008b 48000000 		.4byte	0x48
 406 008f 02       		.uleb128 0x2
 407 0090 04       		.byte	0x4
 408 0091 04       		.byte	0x4
 409 0092 30000000 		.4byte	.LASF12
 410 0096 02       		.uleb128 0x2
 411 0097 08       		.byte	0x8
 412 0098 04       		.byte	0x4
 413 0099 B3000000 		.4byte	.LASF13
 414 009d 02       		.uleb128 0x2
 415 009e 01       		.byte	0x1
 416 009f 08       		.byte	0x8
 417 00a0 5B020000 		.4byte	.LASF14
 418 00a4 04       		.uleb128 0x4
 419 00a5 00000000 		.4byte	.LASF15
 420 00a9 02       		.byte	0x2
 421 00aa 6502     		.2byte	0x265
 422 00ac B0000000 		.4byte	0xb0
 423 00b0 05       		.uleb128 0x5
 424 00b1 83000000 		.4byte	0x83
 425 00b5 06       		.uleb128 0x6
 426 00b6 60000000 		.4byte	.LASF16
 427 00ba 01       		.byte	0x1
 428 00bb 48       		.byte	0x48
 429 00bc 00000000 		.4byte	.LFB0
 430 00c0 78000000 		.4byte	.LFE0-.LFB0
 431 00c4 01       		.uleb128 0x1
 432 00c5 9C       		.byte	0x9c
 433 00c6 D9000000 		.4byte	0xd9
 434 00ca 07       		.uleb128 0x7
 435 00cb 24020000 		.4byte	.LASF18
 436 00cf 01       		.byte	0x1
 437 00d0 48       		.byte	0x48
 438 00d1 6B000000 		.4byte	0x6b
 439 00d5 02       		.uleb128 0x2
 440 00d6 91       		.byte	0x91
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 13


 441 00d7 77       		.sleb128 -9
 442 00d8 00       		.byte	0
 443 00d9 06       		.uleb128 0x6
 444 00da 6A020000 		.4byte	.LASF17
 445 00de 01       		.byte	0x1
 446 00df 72       		.byte	0x72
 447 00e0 00000000 		.4byte	.LFB1
 448 00e4 48000000 		.4byte	.LFE1-.LFB1
 449 00e8 01       		.uleb128 0x1
 450 00e9 9C       		.byte	0x9c
 451 00ea 0B010000 		.4byte	0x10b
 452 00ee 07       		.uleb128 0x7
 453 00ef 06000000 		.4byte	.LASF19
 454 00f3 01       		.byte	0x1
 455 00f4 72       		.byte	0x72
 456 00f5 6B000000 		.4byte	0x6b
 457 00f9 02       		.uleb128 0x2
 458 00fa 91       		.byte	0x91
 459 00fb 6F       		.sleb128 -17
 460 00fc 08       		.uleb128 0x8
 461 00fd 78000000 		.4byte	.LASF24
 462 0101 01       		.byte	0x1
 463 0102 74       		.byte	0x74
 464 0103 6B000000 		.4byte	0x6b
 465 0107 02       		.uleb128 0x2
 466 0108 91       		.byte	0x91
 467 0109 77       		.sleb128 -9
 468 010a 00       		.byte	0
 469 010b 09       		.uleb128 0x9
 470 010c 90000000 		.4byte	.LASF20
 471 0110 01       		.byte	0x1
 472 0111 8B       		.byte	0x8b
 473 0112 6B000000 		.4byte	0x6b
 474 0116 00000000 		.4byte	.LFB2
 475 011a 1C000000 		.4byte	.LFE2-.LFB2
 476 011e 01       		.uleb128 0x1
 477 011f 9C       		.byte	0x9c
 478 0120 09       		.uleb128 0x9
 479 0121 29020000 		.4byte	.LASF21
 480 0125 01       		.byte	0x1
 481 0126 A7       		.byte	0xa7
 482 0127 6B000000 		.4byte	0x6b
 483 012b 00000000 		.4byte	.LFB3
 484 012f 1C000000 		.4byte	.LFE3-.LFB3
 485 0133 01       		.uleb128 0x1
 486 0134 9C       		.byte	0x9c
 487 0135 06       		.uleb128 0x6
 488 0136 36000000 		.4byte	.LASF22
 489 013a 01       		.byte	0x1
 490 013b D2       		.byte	0xd2
 491 013c 00000000 		.4byte	.LFB4
 492 0140 40000000 		.4byte	.LFE4-.LFB4
 493 0144 01       		.uleb128 0x1
 494 0145 9C       		.byte	0x9c
 495 0146 75010000 		.4byte	0x175
 496 014a 07       		.uleb128 0x7
 497 014b 4F010000 		.4byte	.LASF23
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 14


 498 014f 01       		.byte	0x1
 499 0150 D2       		.byte	0xd2
 500 0151 77000000 		.4byte	0x77
 501 0155 02       		.uleb128 0x2
 502 0156 91       		.byte	0x91
 503 0157 6E       		.sleb128 -18
 504 0158 07       		.uleb128 0x7
 505 0159 24020000 		.4byte	.LASF18
 506 015d 01       		.byte	0x1
 507 015e D2       		.byte	0xd2
 508 015f 77000000 		.4byte	0x77
 509 0163 02       		.uleb128 0x2
 510 0164 91       		.byte	0x91
 511 0165 6C       		.sleb128 -20
 512 0166 08       		.uleb128 0x8
 513 0167 F8010000 		.4byte	.LASF25
 514 016b 01       		.byte	0x1
 515 016c D4       		.byte	0xd4
 516 016d 83000000 		.4byte	0x83
 517 0171 02       		.uleb128 0x2
 518 0172 91       		.byte	0x91
 519 0173 74       		.sleb128 -12
 520 0174 00       		.byte	0
 521 0175 0A       		.uleb128 0xa
 522 0176 81020000 		.4byte	.LASF26
 523 017a 01       		.byte	0x1
 524 017b EF       		.byte	0xef
 525 017c 6B000000 		.4byte	0x6b
 526 0180 00000000 		.4byte	.LFB5
 527 0184 30000000 		.4byte	.LFE5-.LFB5
 528 0188 01       		.uleb128 0x1
 529 0189 9C       		.byte	0x9c
 530 018a 08       		.uleb128 0x8
 531 018b 4E020000 		.4byte	.LASF27
 532 018f 01       		.byte	0x1
 533 0190 F1       		.byte	0xf1
 534 0191 6B000000 		.4byte	0x6b
 535 0195 02       		.uleb128 0x2
 536 0196 91       		.byte	0x91
 537 0197 77       		.sleb128 -9
 538 0198 00       		.byte	0
 539 0199 00       		.byte	0
 540              		.section	.debug_abbrev,"",%progbits
 541              	.Ldebug_abbrev0:
 542 0000 01       		.uleb128 0x1
 543 0001 11       		.uleb128 0x11
 544 0002 01       		.byte	0x1
 545 0003 25       		.uleb128 0x25
 546 0004 0E       		.uleb128 0xe
 547 0005 13       		.uleb128 0x13
 548 0006 0B       		.uleb128 0xb
 549 0007 03       		.uleb128 0x3
 550 0008 0E       		.uleb128 0xe
 551 0009 1B       		.uleb128 0x1b
 552 000a 0E       		.uleb128 0xe
 553 000b 55       		.uleb128 0x55
 554 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 15


 555 000d 11       		.uleb128 0x11
 556 000e 01       		.uleb128 0x1
 557 000f 10       		.uleb128 0x10
 558 0010 17       		.uleb128 0x17
 559 0011 00       		.byte	0
 560 0012 00       		.byte	0
 561 0013 02       		.uleb128 0x2
 562 0014 24       		.uleb128 0x24
 563 0015 00       		.byte	0
 564 0016 0B       		.uleb128 0xb
 565 0017 0B       		.uleb128 0xb
 566 0018 3E       		.uleb128 0x3e
 567 0019 0B       		.uleb128 0xb
 568 001a 03       		.uleb128 0x3
 569 001b 0E       		.uleb128 0xe
 570 001c 00       		.byte	0
 571 001d 00       		.byte	0
 572 001e 03       		.uleb128 0x3
 573 001f 24       		.uleb128 0x24
 574 0020 00       		.byte	0
 575 0021 0B       		.uleb128 0xb
 576 0022 0B       		.uleb128 0xb
 577 0023 3E       		.uleb128 0x3e
 578 0024 0B       		.uleb128 0xb
 579 0025 03       		.uleb128 0x3
 580 0026 08       		.uleb128 0x8
 581 0027 00       		.byte	0
 582 0028 00       		.byte	0
 583 0029 04       		.uleb128 0x4
 584 002a 16       		.uleb128 0x16
 585 002b 00       		.byte	0
 586 002c 03       		.uleb128 0x3
 587 002d 0E       		.uleb128 0xe
 588 002e 3A       		.uleb128 0x3a
 589 002f 0B       		.uleb128 0xb
 590 0030 3B       		.uleb128 0x3b
 591 0031 05       		.uleb128 0x5
 592 0032 49       		.uleb128 0x49
 593 0033 13       		.uleb128 0x13
 594 0034 00       		.byte	0
 595 0035 00       		.byte	0
 596 0036 05       		.uleb128 0x5
 597 0037 35       		.uleb128 0x35
 598 0038 00       		.byte	0
 599 0039 49       		.uleb128 0x49
 600 003a 13       		.uleb128 0x13
 601 003b 00       		.byte	0
 602 003c 00       		.byte	0
 603 003d 06       		.uleb128 0x6
 604 003e 2E       		.uleb128 0x2e
 605 003f 01       		.byte	0x1
 606 0040 3F       		.uleb128 0x3f
 607 0041 19       		.uleb128 0x19
 608 0042 03       		.uleb128 0x3
 609 0043 0E       		.uleb128 0xe
 610 0044 3A       		.uleb128 0x3a
 611 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 16


 612 0046 3B       		.uleb128 0x3b
 613 0047 0B       		.uleb128 0xb
 614 0048 27       		.uleb128 0x27
 615 0049 19       		.uleb128 0x19
 616 004a 11       		.uleb128 0x11
 617 004b 01       		.uleb128 0x1
 618 004c 12       		.uleb128 0x12
 619 004d 06       		.uleb128 0x6
 620 004e 40       		.uleb128 0x40
 621 004f 18       		.uleb128 0x18
 622 0050 9742     		.uleb128 0x2117
 623 0052 19       		.uleb128 0x19
 624 0053 01       		.uleb128 0x1
 625 0054 13       		.uleb128 0x13
 626 0055 00       		.byte	0
 627 0056 00       		.byte	0
 628 0057 07       		.uleb128 0x7
 629 0058 05       		.uleb128 0x5
 630 0059 00       		.byte	0
 631 005a 03       		.uleb128 0x3
 632 005b 0E       		.uleb128 0xe
 633 005c 3A       		.uleb128 0x3a
 634 005d 0B       		.uleb128 0xb
 635 005e 3B       		.uleb128 0x3b
 636 005f 0B       		.uleb128 0xb
 637 0060 49       		.uleb128 0x49
 638 0061 13       		.uleb128 0x13
 639 0062 02       		.uleb128 0x2
 640 0063 18       		.uleb128 0x18
 641 0064 00       		.byte	0
 642 0065 00       		.byte	0
 643 0066 08       		.uleb128 0x8
 644 0067 34       		.uleb128 0x34
 645 0068 00       		.byte	0
 646 0069 03       		.uleb128 0x3
 647 006a 0E       		.uleb128 0xe
 648 006b 3A       		.uleb128 0x3a
 649 006c 0B       		.uleb128 0xb
 650 006d 3B       		.uleb128 0x3b
 651 006e 0B       		.uleb128 0xb
 652 006f 49       		.uleb128 0x49
 653 0070 13       		.uleb128 0x13
 654 0071 02       		.uleb128 0x2
 655 0072 18       		.uleb128 0x18
 656 0073 00       		.byte	0
 657 0074 00       		.byte	0
 658 0075 09       		.uleb128 0x9
 659 0076 2E       		.uleb128 0x2e
 660 0077 00       		.byte	0
 661 0078 3F       		.uleb128 0x3f
 662 0079 19       		.uleb128 0x19
 663 007a 03       		.uleb128 0x3
 664 007b 0E       		.uleb128 0xe
 665 007c 3A       		.uleb128 0x3a
 666 007d 0B       		.uleb128 0xb
 667 007e 3B       		.uleb128 0x3b
 668 007f 0B       		.uleb128 0xb
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 17


 669 0080 27       		.uleb128 0x27
 670 0081 19       		.uleb128 0x19
 671 0082 49       		.uleb128 0x49
 672 0083 13       		.uleb128 0x13
 673 0084 11       		.uleb128 0x11
 674 0085 01       		.uleb128 0x1
 675 0086 12       		.uleb128 0x12
 676 0087 06       		.uleb128 0x6
 677 0088 40       		.uleb128 0x40
 678 0089 18       		.uleb128 0x18
 679 008a 9742     		.uleb128 0x2117
 680 008c 19       		.uleb128 0x19
 681 008d 00       		.byte	0
 682 008e 00       		.byte	0
 683 008f 0A       		.uleb128 0xa
 684 0090 2E       		.uleb128 0x2e
 685 0091 01       		.byte	0x1
 686 0092 3F       		.uleb128 0x3f
 687 0093 19       		.uleb128 0x19
 688 0094 03       		.uleb128 0x3
 689 0095 0E       		.uleb128 0xe
 690 0096 3A       		.uleb128 0x3a
 691 0097 0B       		.uleb128 0xb
 692 0098 3B       		.uleb128 0x3b
 693 0099 0B       		.uleb128 0xb
 694 009a 27       		.uleb128 0x27
 695 009b 19       		.uleb128 0x19
 696 009c 49       		.uleb128 0x49
 697 009d 13       		.uleb128 0x13
 698 009e 11       		.uleb128 0x11
 699 009f 01       		.uleb128 0x1
 700 00a0 12       		.uleb128 0x12
 701 00a1 06       		.uleb128 0x6
 702 00a2 40       		.uleb128 0x40
 703 00a3 18       		.uleb128 0x18
 704 00a4 9742     		.uleb128 0x2117
 705 00a6 19       		.uleb128 0x19
 706 00a7 00       		.byte	0
 707 00a8 00       		.byte	0
 708 00a9 00       		.byte	0
 709              		.section	.debug_aranges,"",%progbits
 710 0000 44000000 		.4byte	0x44
 711 0004 0200     		.2byte	0x2
 712 0006 00000000 		.4byte	.Ldebug_info0
 713 000a 04       		.byte	0x4
 714 000b 00       		.byte	0
 715 000c 0000     		.2byte	0
 716 000e 0000     		.2byte	0
 717 0010 00000000 		.4byte	.LFB0
 718 0014 78000000 		.4byte	.LFE0-.LFB0
 719 0018 00000000 		.4byte	.LFB1
 720 001c 48000000 		.4byte	.LFE1-.LFB1
 721 0020 00000000 		.4byte	.LFB2
 722 0024 1C000000 		.4byte	.LFE2-.LFB2
 723 0028 00000000 		.4byte	.LFB3
 724 002c 1C000000 		.4byte	.LFE3-.LFB3
 725 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 18


 726 0034 40000000 		.4byte	.LFE4-.LFB4
 727 0038 00000000 		.4byte	.LFB5
 728 003c 30000000 		.4byte	.LFE5-.LFB5
 729 0040 00000000 		.4byte	0
 730 0044 00000000 		.4byte	0
 731              		.section	.debug_ranges,"",%progbits
 732              	.Ldebug_ranges0:
 733 0000 00000000 		.4byte	.LFB0
 734 0004 78000000 		.4byte	.LFE0
 735 0008 00000000 		.4byte	.LFB1
 736 000c 48000000 		.4byte	.LFE1
 737 0010 00000000 		.4byte	.LFB2
 738 0014 1C000000 		.4byte	.LFE2
 739 0018 00000000 		.4byte	.LFB3
 740 001c 1C000000 		.4byte	.LFE3
 741 0020 00000000 		.4byte	.LFB4
 742 0024 40000000 		.4byte	.LFE4
 743 0028 00000000 		.4byte	.LFB5
 744 002c 30000000 		.4byte	.LFE5
 745 0030 00000000 		.4byte	0
 746 0034 00000000 		.4byte	0
 747              		.section	.debug_line,"",%progbits
 748              	.Ldebug_line0:
 749 0000 C1000000 		.section	.debug_str,"MS",%progbits,1
 749      02004700 
 749      00000201 
 749      FB0E0D00 
 749      01010101 
 750              	.LASF15:
 751 0000 72656733 		.ascii	"reg32\000"
 751      3200
 752              	.LASF19:
 753 0006 76616C75 		.ascii	"value\000"
 753      6500
 754              	.LASF29:
 755 000c 47656E65 		.ascii	"Generated_Source\\PSoC4\\Song3Count.c\000"
 755      72617465 
 755      645F536F 
 755      75726365 
 755      5C50536F 
 756              	.LASF12:
 757 0030 666C6F61 		.ascii	"float\000"
 757      7400
 758              	.LASF22:
 759 0036 536F6E67 		.ascii	"Song3Count_SetInterruptMode\000"
 759      33436F75 
 759      6E745F53 
 759      6574496E 
 759      74657272 
 760              	.LASF1:
 761 0052 756E7369 		.ascii	"unsigned char\000"
 761      676E6564 
 761      20636861 
 761      7200
 762              	.LASF16:
 763 0060 536F6E67 		.ascii	"Song3Count_SetDriveMode\000"
 763      33436F75 
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 19


 763      6E745F53 
 763      65744472 
 763      6976654D 
 764              	.LASF24:
 765 0078 64725661 		.ascii	"drVal\000"
 765      6C00
 766              	.LASF5:
 767 007e 6C6F6E67 		.ascii	"long unsigned int\000"
 767      20756E73 
 767      69676E65 
 767      6420696E 
 767      7400
 768              	.LASF20:
 769 0090 536F6E67 		.ascii	"Song3Count_Read\000"
 769      33436F75 
 769      6E745F52 
 769      65616400 
 770              	.LASF3:
 771 00a0 73686F72 		.ascii	"short unsigned int\000"
 771      7420756E 
 771      7369676E 
 771      65642069 
 771      6E7400
 772              	.LASF13:
 773 00b3 646F7562 		.ascii	"double\000"
 773      6C6500
 774              	.LASF28:
 775 00ba 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 775      4320342E 
 775      392E3320 
 775      32303135 
 775      30333033 
 776 00ed 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 776      20726576 
 776      6973696F 
 776      6E203232 
 776      31323230 
 777 0120 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 777      66756E63 
 777      74696F6E 
 777      2D736563 
 777      74696F6E 
 778              	.LASF10:
 779 0148 75696E74 		.ascii	"uint16\000"
 779      313600
 780              	.LASF23:
 781 014f 706F7369 		.ascii	"position\000"
 781      74696F6E 
 781      00
 782              	.LASF11:
 783 0158 75696E74 		.ascii	"uint32\000"
 783      333200
 784              	.LASF30:
 785 015f 433A5C55 		.ascii	"C:\\Users\\Aaron Wubshet\\Google Drive\\1 College\\"
 785      73657273 
 785      5C416172 
 785      6F6E2057 
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 20


 785      75627368 
 786 018d 3220536F 		.ascii	"2 Sophomore Year\\3 SPRING\\6.115\\Final Project PS"
 786      70686F6D 
 786      6F726520 
 786      59656172 
 786      5C332053 
 787 01bd 6F432057 		.ascii	"oC Workspace\\Final Project\\BLE_UART_peripheral_OT"
 787      6F726B73 
 787      70616365 
 787      5C46696E 
 787      616C2050 
 788 01ee 4845522E 		.ascii	"HER.cydsn\000"
 788      63796473 
 788      6E00
 789              	.LASF25:
 790 01f8 696E7472 		.ascii	"intrCfg\000"
 790      43666700 
 791              	.LASF8:
 792 0200 756E7369 		.ascii	"unsigned int\000"
 792      676E6564 
 792      20696E74 
 792      00
 793              	.LASF7:
 794 020d 6C6F6E67 		.ascii	"long long unsigned int\000"
 794      206C6F6E 
 794      6720756E 
 794      7369676E 
 794      65642069 
 795              	.LASF18:
 796 0224 6D6F6465 		.ascii	"mode\000"
 796      00
 797              	.LASF21:
 798 0229 536F6E67 		.ascii	"Song3Count_ReadDataReg\000"
 798      33436F75 
 798      6E745F52 
 798      65616444 
 798      61746152 
 799              	.LASF6:
 800 0240 6C6F6E67 		.ascii	"long long int\000"
 800      206C6F6E 
 800      6720696E 
 800      7400
 801              	.LASF27:
 802 024e 6D61736B 		.ascii	"maskedStatus\000"
 802      65645374 
 802      61747573 
 802      00
 803              	.LASF14:
 804 025b 63686172 		.ascii	"char\000"
 804      00
 805              	.LASF2:
 806 0260 73686F72 		.ascii	"short int\000"
 806      7420696E 
 806      7400
 807              	.LASF17:
 808 026a 536F6E67 		.ascii	"Song3Count_Write\000"
 808      33436F75 
ARM GAS  C:\Users\AARONW~1\AppData\Local\Temp\ccpBLA51.s 			page 21


 808      6E745F57 
 808      72697465 
 808      00
 809              	.LASF9:
 810 027b 75696E74 		.ascii	"uint8\000"
 810      3800
 811              	.LASF26:
 812 0281 536F6E67 		.ascii	"Song3Count_ClearInterrupt\000"
 812      33436F75 
 812      6E745F43 
 812      6C656172 
 812      496E7465 
 813              	.LASF4:
 814 029b 6C6F6E67 		.ascii	"long int\000"
 814      20696E74 
 814      00
 815              	.LASF0:
 816 02a4 7369676E 		.ascii	"signed char\000"
 816      65642063 
 816      68617200 
 817              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
